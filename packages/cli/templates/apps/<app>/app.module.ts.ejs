import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { BrowserModule } from '@angular/platform-browser';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
//import { EntityDataModule } from '@ngrx/data';
import { EffectsModule } from '@ngrx/effects';
import { routerReducer, RouterState, StoreRouterConnectingModule } from '@ngrx/router-store';
import { StoreModule } from '@ngrx/store';
import { StoreDevtoolsModule } from '@ngrx/store-devtools';

import { environment } from '../environments/environment';
import { AppComponent } from './app.component';
import { AppRoutingModule } from './app-routing.module';
import { MaterialModule } from './material.module';

@NgModule( {
	declarations: [
		AppComponent
	],
	imports: [
		BrowserModule,
		BrowserAnimationsModule,
		AppRoutingModule,
		FlexLayoutModule,
		MaterialModule,
		// NgRx Modules Start
		StoreModule.forRoot(
			{
				router: routerReducer
			},
			{
				metaReducers: !environment.production ? [] : [],
				runtimeChecks: {
					strictStateImmutability: true,
					strictActionImmutability: true,
					strictActionSerializability: true,
					strictStateSerializability: true
				},
			}
		),
		EffectsModule.forRoot( [] ),
		//!environment.production ? StoreDevtoolsModule.instrument() : [],
		StoreDevtoolsModule.instrument( { maxAge: 25, logOnly: environment.production } ),
		StoreRouterConnectingModule.forRoot( {
			stateKey: 'router',
			routerState: RouterState.Minimal
		} ),
		//EntityDataModule.forRoot( {} ),
		// NgRx Modules End
	],
	providers: [],
	bootstrap: [ AppComponent ],
} )
export class AppModule {}
