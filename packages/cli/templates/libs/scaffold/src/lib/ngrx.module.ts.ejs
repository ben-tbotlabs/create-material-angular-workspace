/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-assignment */

import { NgModule } from '@angular/core';
//import { EntityDataModule } from '@ngrx/data';
import { EffectsModule } from '@ngrx/effects';
import { routerReducer, RouterState, StoreRouterConnectingModule } from '@ngrx/router-store';
import { StoreModule } from '@ngrx/store';
import { StoreDevtoolsModule } from '@ngrx/store-devtools';

declare let process: any;
const env: string = process.env.NODE_ENV;
const isProduction = env === 'production';

@NgModule( {
	imports: [
		StoreModule.forRoot(
			{
				router: routerReducer,
			},
			{
				metaReducers: !isProduction ? [] : [],
				runtimeChecks: {
					strictStateImmutability: true,
					strictActionImmutability: true,
					strictActionSerializability: true,
					strictStateSerializability: true,
				},
			}
		),
		EffectsModule.forRoot( [] ),
		//!environment.production ? StoreDevtoolsModule.instrument() : [],
		StoreDevtoolsModule.instrument( { maxAge: 25, logOnly: isProduction } ),
		StoreRouterConnectingModule.forRoot( {
			stateKey: 'router',
			routerState: RouterState.Minimal,
		} ),
		//EntityDataModule.forRoot( {} ),
	],
	exports: [
		StoreModule,
		EffectsModule,
		StoreDevtoolsModule,
		StoreRouterConnectingModule,
		//EntityDataModule
	],
} )
export class <%- _.capitalize( app ) %>NgRxModule {}

/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access,  @typescript-eslint/no-unsafe-assignment */
